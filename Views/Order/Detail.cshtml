@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Đơn Hàng Của Bạn";
    Layout = "~/Views/Shared/_LayoutOgani2.cshtml";
}

<div class="container order-container my-5">
    <h2 class="text-center mb-4">Đơn Hàng Của Bạn</h2>

    @if (!Model.Any())
    {
        <p class="text-center">Bạn chưa có đơn hàng nào.</p>
    }
    else
    {
        foreach (var donHang in Model)
        {
            <div class="order-card shadow-sm">
                <div class="order-header">
                    <h4>Mã đơn hàng: <span>@donHang.MaDonHang</span></h4>
                    <p>Ngày đặt: <strong>@donHang.NgayDat.ToString("dd/MM/yyyy")</strong></p>
                    <p>Trạng thái: <span class="badge @GetStatusClass(donHang.TrangThai)">@donHang.TrangThai</span></p>
                </div>

                <div class="order-info">
                    <p><strong>Ngày giao dự kiến:</strong> @donHang.NgayGiao?.ToString("dd/MM/yyyy")</p>
                    <p><strong>Địa chỉ giao hàng:</strong> @donHang.DiaChiGiao</p>
                </div>

                <div class="payment-info">
                    <h5>Thông tin thanh toán</h5>
                    <p><strong>Phương thức:</strong> @donHang.ThanhToan.PhuongThuc</p>
                    <p><strong>Trạng thái thanh toán:</strong> @donHang.ThanhToan.TrangThai</p>
                    <p><strong>Tổng tiền:</strong> @String.Format("{0:N0}", donHang.ThanhToan.TongTien) VND</p>
                </div>

                <div class="product-details mt-3">
                    <h5>Chi tiết sản phẩm</h5>
                    <table class="table table-striped table-borderless">
                        <thead>
                            <tr>
                                <th>Hình ảnh</th>
                                <th>Sản phẩm</th>
                                <th>Số lượng</th>
                                <th>Giá bán</th>
                                <th>Tổng tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var chiTiet in donHang.ChiTietDonHang)
                            {
                                <tr>
                                    <td>
                                        <img src="~/LayoutOgani/img/@chiTiet.HinhAnh" alt="Ảnh sản phẩm" class="product-image">
                                    </td>
                                    <td>@chiTiet.SanPham</td>
                                    <td>@chiTiet.SoLuong</td>
                                    <td>@String.Format("{0:N0}", chiTiet.GiaBan) VND</td>
                                    <td>@String.Format("{0:N0}", chiTiet.SoLuong * chiTiet.GiaBan) VND</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</div>

<style>
    /* Container styles */
    .order-container {
        max-width: 800px;
        margin: auto;
    }

    /* Order Card styles */
    .order-card {
        background-color: #fff;
        padding: 20px;
        margin-bottom: 25px;
        border: 1px solid #eaeaea;
        border-radius: 8px;
    }

    /* Header styles */
    .order-header {
        background-color: #f5f5f5;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

        .order-header h4 {
            font-size: 18px;
            font-weight: 600;
            color: #333;
            margin-bottom: 5px;
        }

        .order-header span {
            font-weight: 500;
            color: #007bff;
        }

    /* Badge styling based on status */
    .badge {
        padding: 5px 10px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 600;
    }

    .badge-success {
        background-color: #28a745;
        color: #fff;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #333;
    }

    .badge-danger {
        background-color: #dc3545;
        color: #fff;
    }

    /* Order info and payment info */
    .order-info, .payment-info, .product-details {
        margin-bottom: 15px;
    }

        .order-info p, .payment-info p {
            margin: 0;
            font-size: 14px;
        }

        .payment-info h5, .product-details h5 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 10px;
        }

    /* Table styling */
    .table {
        margin-top: 10px;
        font-size: 14px;
    }

        .table th {
            font-weight: 600;
            color: #666;
        }

        .table td {
            vertical-align: middle;
        }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 5px;
    }

    /* Utility classes for spacing */
    .mt-3 {
        margin-top: 1rem !important;
    }
</style>

@functions {
    private string GetStatusClass(string status)
    {
        switch (status.ToLower())
        {
            case "hoàn thành":
                return "badge-success";
            case "đang xử lý":
                return "badge-warning";
            case "hủy":
                return "badge-danger";
            default:
                return "badge-secondary";
        }
    }
}
