@{
    ViewData["Title"] = "Chi tiết giỏ hàng";
    Layout = "~/Views/Shared/_LayoutOgani2.cshtml";
    <link href="~/css/Cart.css" rel="stylesheet">;
    var cartItems = ViewBag.CartItems;
    var totalQuantity = ViewBag.TotalQuantity;
    var totalPrice = ViewBag.TotalPrice;
    var discountCodes = ViewBag.DiscountCodes;
}
<div class="cart-container">
    <!-- Left Section: Cart Details -->
    <div class="cart-details">
        <h2>Giỏ hàng của bạn</h2>
        <ul class="cart-items">
            @foreach (var item in cartItems)
            {
                <li class="cart-item">
                    <img src="/LayoutOgani/img/@item.HinhAnh" alt="@item.TenSanPham" class="product-image" />
                    <div class="item-info">
                        <h3 class="item-name">@item.TenSanPham</h3>
                        <p class="item-attributes">Màu: @item.MauSac, Kích thước: @item.KichThuoc</p>
                        <div class="quantity-controls">
                            <button class="btn-quantity decrease" onclick="updateQuantity(@item.MaSanPham, -1)">-</button>
                            <span class="quantity">@item.SoLuong</span>
                            <button class="btn-quantity increase" onclick="updateQuantity(@item.MaSanPham, 1)">+</button>
                        </div>
                        <p class="item-price">@String.Format("{0:N0}", item.GiaBan) đ</p>
                        <button class="btn-remove" onclick="removeCartItem('@item.MaSanPham')">Xóa</button>
                    </div>
                    <p class="item-total">Tổng: @String.Format("{0:N0}", item.TongTien) đ</p>
                </li>
            }
        </ul>

        <!-- Discount Code Section with Separator -->
        <div class="separator"></div>
        <div class="discount-section">
            <input type="text" placeholder="Nhập mã giảm giá" class="discount-input">
            <button class="apply-discount">Áp dụng</button>
        </div>
        <div class="separator"></div>
        <div class="price-details">
            <p>Tạm tính: <span>@String.Format("{0:N0}", ViewBag.TotalPrice)đ</span></p>
            <p class="savings">Tiết kiệm: <span>0đ</span></p>
            <p>Giảm giá: <span>0đ</span></p>
            <div class="separator"></div>
            <p>Phí giao hàng: <span>Miễn phí</span></p>
            <div class="separator"></div>
            <h3 class="total-price">Tổng: <span>@String.Format("{0:N0}", ViewBag.TotalPrice)đ</span></h3>
        </div>
    </div>

    <!-- Right Section: Customer Information with Separator -->
    <div class="customer-section">
        <div class="customer-info">
            <h2>Thông tin khách hàng</h2>
            <form id="order-form">
            <div class="form-group">
                <label for="name">Họ và tên</label>
                <input type="text" id="name" name="name" placeholder="Nhập họ tên của bạn" value="@ViewBag.CustomerName" required>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" placeholder="example@example.com" value="@ViewBag.CustomerEmail" required>
            </div>
            <div class="form-group">
                <label for="address">Địa chỉ</label>
                <input type="text" id="address" name="address" placeholder="Nhập địa chỉ của bạn" value="@ViewBag.CustomerAddress" required>
            </div>
            <div class="form-group">
                <label for="phone">Số điện thoại</label>
                <input type="tel" id="phone" name="phone" placeholder="Số điện thoại của bạn" value="@ViewBag.CustomerPhone" required>
            </div>
        </form>
        </div>
        <div class="separator bold"></div>

        <!-- Payment Method Outside of Customer Info Section -->
        <div class="payment-method">
            <h3>Hình thức thanh toán</h3>
            <div class="payment-options">
                <label class="payment-option active">
                    <input type="radio" name="paymentMethod" value="bank_transfer" checked>
                    <div class="option-content">
                        <span class="option-icon">🏦</span>
                        <span class="option-text">Chuyển khoản ngân hàng</span>
                    </div>
                </label>

                <label class="payment-option">
                    <input type="radio" name="paymentMethod" value="cod">
                    <div class="option-content">
                        <span class="option-icon">📦</span>
                        <span class="option-text">Thanh toán khi nhận hàng (COD)</span>
                    </div>
                </label>

                <label class="payment-option">
                    <input type="radio" name="paymentMethod" value="stripe">
                    <div class="option-content">
                        <span class="option-icon">💳</span>
                        <span class="option-text">Thanh toán qua Stripe</span>
                    </div>
                </label>
            </div>
            <div id="card-element" class="stripe-card-element"></div>
        </div>
    </div>
</div>

<!-- Order Button -->
<div class="place-order">
    <button id="order-button">Đặt hàng</button>
</div>

<div id="orderSuccessModal" class="modal" style="display: none;">
    <div class="modal-content">
        <h2>Đơn hàng đã được đặt thành công!</h2>
        <p>Vui lòng kiểm tra đơn hàng trong mục đơn hàng của bạn.</p>
        <button id="closeModalBtn">Về trang chủ</button>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Kiểm tra xem mã tài khoản có tồn tại trong ViewBag không
    var maTaiKhoan = '@ViewBag.MaTaiKhoan';
    console.log("Mã tài khoản từ Session:", maTaiKhoan);
</script>
<script>
    var stripe = Stripe('pk_test_51QHQ0IGVyUQsdJTUKqBdjNH4ZW79wTWV4LUD5oYz36anI4gCTYgceBS0Pthhyh7RO1uCWTJESYrzFH6ilmvUs8LM004IBc0Ump'); // Thay YOUR_PUBLIC_STRIPE_KEY bằng khóa công khai của Stripe
    var elements = stripe.elements();
    var card = elements.create('card');

    $("input[name='paymentMethod']").on("change", function () {
        if ($(this).val() === "stripe") {
            $("#card-element").show();
            card.mount("#card-element");
        } else {
            $("#card-element").hide();
        }
    });

    $("#order-button").on("click", function () {
        var paymentMethod = $("input[name='paymentMethod']:checked").val();
        if (paymentMethod === "stripe") {
            stripe.createPaymentMethod({
                type: 'card',
                card: card,
                billing_details: {
                    name: $("#name").val(),
                    email: $("#email").val()
                }
            }).then(function (result) {
                if (result.error) {
                    alert("Lỗi thanh toán: " + result.error.message);
                } else {
                    createOrder(result.paymentMethod.id, "stripe");
                }
            });
        } else {
            createOrder(null, paymentMethod);
        }
    });

    function createOrder(paymentMethodId, paymentMethod) {
        $.ajax({
            url: "/Cart/CreateOrder",
            type: "POST",
            data: { paymentMethodId: paymentMethodId, paymentMethod: paymentMethod },
            success: function (response) {
                if (response.success) {
                    alert("Đơn hàng của bạn đã được tạo thành công!");
                    window.location.href = "/Order/Detail/" + response.orderId;
                } else if (response.requiresAction) {
                    stripe.confirmCardPayment(response.paymentIntentClientSecret).then(function (result) {
                        if (result.error) {
                            alert("Lỗi xác thực: " + result.error.message);
                        } else {
                            alert("Đơn hàng của bạn đã được tạo thành công!");
                            window.location.href = "/Order/Detail/" + response.orderId;
                        }
                    });
                } else {
                    alert("Đã xảy ra lỗi khi tạo đơn hàng. Vui lòng thử lại.");
                }
            },
            error: function () {
                alert("Đã xảy ra lỗi. Vui lòng kiểm tra lại.");
            }
        });
    }
    $(document).ready(function () {
        $(".apply-discount").click(function () {
            var maGiamGia = $(".discount-input").val();

            if (maGiamGia.trim() === "") {
                alert("Vui lòng nhập mã giảm giá.");
                return;
            }

            $.ajax({
                url: "/Cart/ApplyDiscount",
                type: "POST",
                data: { maGiamGia: maGiamGia },
                success: function (response) {
                    if (response.success) {
                        // Cập nhật giảm giá và tổng tiền
                        $(".savings span").text(response.discountAmount.toLocaleString() + "đ");
                        var currentTotal = parseInt($(".total-price span").text().replace(/,/g, ""));
                        var newTotal = currentTotal - response.discountAmount;
                        $(".total-price span").text(newTotal.toLocaleString() + "đ");

                        alert("Áp dụng mã giảm giá thành công!");
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert("Có lỗi xảy ra. Vui lòng thử lại.");
                }
            });
        });
    });
    document.querySelectorAll('.payment-option input[type="radio"]').forEach(radio => {
        radio.addEventListener('change', function () {
            // Remove active class from all options
            document.querySelectorAll('.payment-option').forEach(option => {
                option.classList.remove('active');
            });

            // Add active class to selected option
            this.closest('.payment-option').classList.add('active');

            // Handle Stripe card element visibility
            const stripeElement = document.querySelector('.stripe-card-element');
            if (this.value === 'stripe') {
                stripeElement.style.display = 'block';
            } else {
                stripeElement.style.display = 'none';
            }
        });
    });

    // Initialize with first option active
    document.querySelector('.payment-option input[type="radio"]:checked')
        .closest('.payment-option').classList.add('active');
</script>

<style>
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
    }

        .modal-content h2 {
            margin-top: 0;
        }

        .modal-content button {
            padding: 10px 20px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
</style>






