// <auto-generated />
using System;
using DoAnPhanMem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnPhanMem.Migrations
{
    [DbContext(typeof(dbSportStoreContext))]
    [Migration("20241014072220_nayhsud")]
    partial class nayhsud
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Admina", b =>
                {
                    b.Property<string>("MaAdmin")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaAdmin");

                    b.HasIndex("MaTaiKhoan");

                    b.ToTable("Admina");
                });

            modelBuilder.Entity("BaoCao", b =>
                {
                    b.Property<string>("MaBaoCao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminMaAdmin")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaAdmin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaBaoCao");

                    b.HasIndex("AdminMaAdmin");

                    b.ToTable("BaoCao");
                });

            modelBuilder.Entity("ChiTietDonHang", b =>
                {
                    b.Property<string>("MaChiTietDonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDonHang");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaGiamGia");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("ChiTietGioHang", b =>
                {
                    b.Property<string>("MaChiTietGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GioHangMaGioHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGioHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanPhamMaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaChiTietGioHang");

                    b.HasIndex("GioHangMaGioHang");

                    b.HasIndex("SanPhamMaSanPham");

                    b.ToTable("ChiTietGioHang");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.Property<string>("MaChiTietHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaThoiDiemMua")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SanPhamMaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietHoaDon");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.HasIndex("SanPhamMaSanPham");

                    b.ToTable("ChiTietHoaDon");
                });

            modelBuilder.Entity("ChiTietSanPham", b =>
                {
                    b.Property<string>("MaChiTietSP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKichThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaMauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaChiTietSP");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaKichThuoc");

                    b.HasIndex("MaMauSac");

                    b.HasIndex("MaSanPham");

                    b.ToTable("ChiTietSanPham");
                });

            modelBuilder.Entity("DanhGia", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoaDonMaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhachHangMaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("SanPhamMaSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoDiem")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("HoaDonMaHoaDon");

                    b.HasIndex("KhachHangMaKhachHang");

                    b.HasIndex("SanPhamMaSanPham");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("DanhMuc", b =>
                {
                    b.Property<string>("MaDanhMuc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("DonHang", b =>
                {
                    b.Property<string>("MaDonHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DiaChiGiao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaDonHang");

                    b.HasIndex("MaKhachHang");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("GiamGia", b =>
                {
                    b.Property<string>("MaGiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DieuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MucGiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaGiamGia");

                    b.ToTable("GiamGia");
                });

            modelBuilder.Entity("GiaoHang", b =>
                {
                    b.Property<string>("MaGiaoHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonHangMaDonHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaGiaoHang");

                    b.HasIndex("DonHangMaDonHang");

                    b.ToTable("GiaoHang");
                });

            modelBuilder.Entity("GioHang", b =>
                {
                    b.Property<string>("MaGioHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhachHangMaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaGioHang");

                    b.HasIndex("KhachHangMaKhachHang");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonHangMaDonHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("DonHangMaDonHang");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DacQuyen")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MaTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaKhachHang");

                    b.HasIndex("MaTaiKhoan");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("KichThuoc", b =>
                {
                    b.Property<string>("MaKichThuoc")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenKichThuoc")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaKichThuoc");

                    b.ToTable("KichThuoc");
                });

            modelBuilder.Entity("MauSac", b =>
                {
                    b.Property<string>("MaMauSac")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenMauSac")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("MaMauSac");

                    b.ToTable("MauSac");
                });

            modelBuilder.Entity("SanPham", b =>
                {
                    b.Property<string>("MaSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaSanPham");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("TaiKhoan", b =>
                {
                    b.Property<string>("MaTaiKhoan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaTaiKhoan");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("ThanhToan", b =>
                {
                    b.Property<string>("MaThanhToan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonHangMaDonHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KhachHangMaKhachHang")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaDonHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThuc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaThanhToan");

                    b.HasIndex("DonHangMaDonHang");

                    b.HasIndex("KhachHangMaKhachHang");

                    b.ToTable("ThanhToan");
                });

            modelBuilder.Entity("Admina", b =>
                {
                    b.HasOne("TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("MaTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("BaoCao", b =>
                {
                    b.HasOne("Admina", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminMaAdmin");

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("ChiTietDonHang", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GiamGia", "GiamGia")
                        .WithMany()
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("GiamGia");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ChiTietGioHang", b =>
                {
                    b.HasOne("GioHang", "GioHang")
                        .WithMany()
                        .HasForeignKey("GioHangMaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamMaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.HasOne("HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("HoaDonMaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamMaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ChiTietSanPham", b =>
                {
                    b.HasOne("DanhMuc", "DanhMuc")
                        .WithMany()
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KichThuoc", "KichThuoc")
                        .WithMany()
                        .HasForeignKey("MaKichThuoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MauSac", "MauSac")
                        .WithMany()
                        .HasForeignKey("MaMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("KichThuoc");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DanhGia", b =>
                {
                    b.HasOne("HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("HoaDonMaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangMaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("SanPhamMaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("DonHang", b =>
                {
                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("GiaoHang", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangMaDonHang");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("GioHang", b =>
                {
                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangMaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangMaDonHang");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("KhachHang", b =>
                {
                    b.HasOne("TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("MaTaiKhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("ThanhToan", b =>
                {
                    b.HasOne("DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("DonHangMaDonHang");

                    b.HasOne("KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangMaKhachHang");

                    b.Navigation("DonHang");

                    b.Navigation("KhachHang");
                });
#pragma warning restore 612, 618
        }
    }
}
